<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<context:property-placeholder
		location="classpath*:*.properties,file:${jboss.server.config.dir}/public-directory-services-client.properties,file:${jboss.server.config.dir}/parsWeb.properties"
		ignore-resource-not-found="true" />
	
	<!-- expose specific properties to application -->
	<bean id="applicationProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="singleton" value="true" />
		<property name="properties">
			<props>
				<prop key="profile.page">${profile.page}</prop>
				<prop key="logout.page">${logout.page}</prop>
			</props>
		</property>
	</bean>
	
	<sec:global-method-security secured-annotations="enabled" />
	<sec:http pattern="/stat/**" security="none"/>
    <sec:http pattern="/master/**" security="none"/>
    <sec:http pattern="/assets/**" security="none"/>
    <sec:http pattern="/login*" security="none"/>
    <sec:http pattern="/favicon.ico" security="none"/>

	<sec:http auto-config="true" use-expressions="false">
	
		<sec:csrf disabled="true"/>
<!-- 		<sec:intercept-url pattern="/login"      			access="ROLE_ANONYMOUS,ROLE_USER" /> -->
<!-- 		<sec:intercept-url pattern="/fakelogin"				access="ROLE_ANONYMOUS,ROLE_USER" /> -->
<!-- 		<sec:intercept-url pattern="/resources/**"			access="ROLE_ANONYMOUS,ROLE_USER" /> -->
<!-- 		<sec:intercept-url pattern="/autenticazione.html" 	access="ROLE_ANONYMOUS,ROLE_USER" /> -->
<!-- 		<sec:intercept-url pattern="/**" 					access="ROLE_USER" /> -->
		
		<sec:form-login  
			default-target-url="/" 
		 	always-use-default-target="false"
			login-page="/${login.page}" 
			authentication-failure-url="/loginError" />
		<sec:logout logout-url="/logout" logout-success-url="${logout.page}" />
		
	</sec:http>

	<sec:authentication-manager>
        <sec:authentication-provider >
		<sec:user-service>
			<sec:user name="user" password="password" authorities="ROLE_USER"/>
			<sec:user name="admin" password="password" authorities="ROLE_USER, ROLE_EDIT, ROLE_ADMIN"/>
			<sec:user name="edit" password="password" authorities="ROLE_USER, ROLE_EDIT"/>
		</sec:user-service>
<!--    <sec:jdbc-user-service  -->
<!--    data-source-ref='dataSource' users-by-username-query="select username,password, IF(enabled, 'true', 'false') from anagra_utente where username=?"   -->
<!--    authorities-by-username-query="select a.username, b.ruolo as authorities from anagra_utente a join ruolo_utente b on a.id=b.id_utente where a.username = ? " -->
<!--    /> -->
        </sec:authentication-provider>
    </sec:authentication-manager>

	<bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<context:annotation-config />
	<context:component-scan base-package="it.prisma.pars2monitor" />
	
	<tx:annotation-driven />
	
	<jpa:repositories 
		base-package="it.prisma.pars2monitor.repository" 
		entity-manager-factory-ref="entityManagerFactory" 
		transaction-manager-ref="transactionManager" 
	/>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="persistenceUnitName" value="PARS_PU" />
		<property name="packagesToScan" value="it.prisma.pars2monitor.repository.entity" />
	</bean>
	
	<jee:jndi-lookup jndi-name="java:jboss/datasources/pars2monitorDS" id="dataSource" expected-type="javax.sql.DataSource" />
		
	<bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	


<!-- 	<bean id="hibernateListener" class="it.prisma.pars2client.core.persistence.listener.HibernateListenersConfigurer" -->
<!-- 		init-method="init"> -->
<!-- 		<property name="entityManagerFactory" ref="entityManagerFactory" /> -->
<!-- 		<property name="codiceProgramma" value="${application.id}" /> -->
<!--  	</bean> -->
 	
</beans>
